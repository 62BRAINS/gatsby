const unified = require("unified")

const words = [
  "➡️",
  "90s",
  "3G",
  "analytics",
  "anonymized",
  "auth",
  "autoplay",
  "autocomplete",
  "backend",
  "barebones",
  "Bing",
  "blogpost", // used in source-plugin-tutorial; should just be "blog post"?
  "bugfixes", // bug fixes?
  "colocate",
  "codebase", // we're inconsistent about codebase vs code base
  "codebases",
  "codecs",
  "config",
  "customizations",
  "Ctrl",
  "dataset",
  "destructured",
  "dev",
  "distro",
  "distros",
  "Docz",
  "dropdown",
  "env",
  "Egghead.io",
  "favicon",
  "filesystem",
  "formatter",
  "frontend",
  "frontmatter",
  "Gatsbygram",
  "globals",
  "hackathon",
  "hardcode",
  "hardcoded",
  "hardcoding",
  "indexable",
  "installable",
  "integrations",
  "JSX",
  "JSON-LD",
  "lifecycle",
  "livestream",
  "livestreams",
  "matchers",
  "minimalistic",
  "minified",
  "misconfigured",
  "modularizing",
  "namespace",
  "namespaced",
  "natively",
  "nav",
  "oEmbed",
  "parsers",
  "pathname",
  "performant",
  "presentational",
  "preload",
  "pre-existing",
  "pre-release",
  "pre-installed", // apparently preinstalled is better?
  "pre-configured", // also preconfigured
  "preconfigured", // also preconfigured
  "pre-bundle", // hypax
  "pre-built",
  "pre-fill",
  "Prismic",
  "programmatically",
  "queryable",
  "UI",
  "UX",
  "uncomment",
  "README",
  "renderers",
  "repo",
  "repos",
  "resolvers",
  "reusability",
  "roadmap",
  "scalable",
  "semver",
  "serializer",
  "serializers",
  "shadowable",
  "shortcode",
  "stringified",
  "stylesheet", // should be style sheet?
  "stylesheets",
  "superset",
  "subfolder",
  "subdirectory",
  "subfield",
  "subfields",
  "theming",
  "v2",
  "webhook",
  "webhooks",
  "websocket",
  "walkthrough",
  "workspace",
  "workspaces",
  "hoo", // part of "woo hoo"
  "yay",
  "c'mon",
  "tada",

  // Abbreviations
  "API",
  "APIs",
  "AST",
  "UUID",
  "CLI",
  "CMS",
  "CMSs",
  "CSS-in-JS",
  "SCSS",
  "DOM",
  "GIFs",
  "CDN",
  "PWA",
  "PWAs",
  "PCI",
  "SSR",
  "SEO",
  "SKU",
  "SKUs",
  "SVG",
  "VM",
  "HTML5",

  // People names
  "Chedeau's",
  "Dalgleish's",
  "Lengstorf",
  "Otander",
  "Zhu",
  "Wedekind",
  "Dodds",
  "Kalin",
  "Chernev",
  "Biscardi",

  // Brand/product/library names
  "GraphiQL",
  "GraphQL",
  "npm",
  "lodash",
  "lodash's",
  "TopoJSON",
  "Unsplash",
  "Vimeo",
  "Auth0",
  "JAMstack",
  "OAuth",
  "zsh",
  "Netlify",
  "Netlify's",
  "JSON",
  "YAML",
  "MDX",
  "MDN",
  "MDN's",
  "Node.js",
  "Node.js's",
  "GraphCMS",
  "Hasura",
  "AppSync",
  "Dgraph",
  "Codecademy",
  "CommonJS",
  "DevTools",
  "Homebrew",
  "JSS",
  "PostCSS",
  "macOS",
  "Manjaro",
  "Typography.js",
  "nvm",
  "Xcode",
  "Stripe.js",
  "Snipcart",
  "Shopify",
  "DatoCMS",
  "Zuri",
  "webpack",
  "redux",
  "WebP",
  "Youfit",
  "Akamai",
  "Cloudinary",
  "PurgeCSS",
  "glamor",

  // plugin names -- should these be backticked?
  "wp-graphql",
  "mdast",
  "unist",
  "unist-util-visit",
  "mdast-util-to-string",
  "gatsby-image",
  "gatsby-plugin-sharp",
  "gatsby-transformer-sharp",
  "gatsby-starter-default",
  "gatsby-starter-blog",
  "gatsby-plugin-sass",
  "gatsby-personal-starter-blog",
  "gatsby-source-filesystem",
  "gatsby-transformer-yaml",
  "gatsby-transformer-cloudinary",
  "gatsby-transformer-remark",
  "gatsby-plugin-theme-ui",
  "gatsby-source-graphql",
  "gatsby-plugin-postcss",
  "gatsby-mdx-embed",
  "gatsby-theme-notes",
  "gatsby-theme-starter",
  "gatsby-theme-blog",
  "gatsby-source-stripe",

  // questionable?
  "gatsbyjs.org's",
  // hashtags -- can use another plugin to treat them like such
  "gatsbytutorial",
  "buildwithgatsby",
  "gatsbyjs",
  "QL",
  "rhodochrosite",
  "eBook", // e-book?
  "400px",
  "250px",
  "100ms",
  "5X",
  "2-3x",
  "StaticQuery", // should be backticked
].join("\n")

module.exports = {
  plugins: [
    ["remark-frontmatter", "yaml"],
    [
      "remark-retext",
      unified()
        .use(require("retext-english"))
        .use(require("retext-syntax-urls"))
        .use(require("retext-syntax-mentions"))
        .use(require("retext-spell"), {
          dictionary: require("dictionary-en"),
          personal: words,
        })
        .use(require("retext-diacritics"))
        .use(require("retext-indefinite-article"))
        .use(require("retext-redundant-acronyms"))
        .use(require("retext-sentence-spacing")),
    ],
    "remark-preset-lint-recommended",
    "remark-preset-lint-markdown-style-guide",

    // additional remark-lint rules
    ["remark-lint-list-item-indent", "space"],
    "remark-lint-no-duplicate-headings-in-section",
    "remark-lint-no-reference-like-url",
    ["remark-lint-ordered-list-marker-value", "ordered"],

    // We would like these rules to be enabled, but they require significant content changes
    // and need additional PRs to be implemented
    ["remark-lint-emphasis-marker", false],
    ["remark-lint-heading-increment", false],
    ["remark-lint-no-heading-punctuation", false],
    ["remark-lint-list-item-spacing", false],

    // The following rules are disabled because they are inconsistent to the
    // Gatsby Style Guide.

    // We use soft-wrapped paragraphs for ease of diffing/translation.
    ["remark-lint-maximum-line-length", false],
    // We don't restrict the length of headings.
    ["remark-lint-maximum-heading-length", false],
    // We use duplicate headings sometimes, e.g. multiple "Directions" in Recipes.
    // Use no-duplicate-headings-in-section instead.
    ["remark-lint-no-duplicate-headings", false],
    // We use emphasis as notes or warnings in a couple places, which triggers this rule.
    ["remark-lint-no-emphasis-as-heading", false],
    // YouTube and Giphy embeds in the docs use literal URLs.
    ["remark-lint-no-literal-urls", false],
    // We use `[shortcuts]` for convenience.
    ["remark-lint-no-shortcut-reference-link", false],
    // We use brackets in a lot of places as argument lists and do not want to escape them.
    ["remark-lint-no-undefined-references", false],
    ["remark-lint-first-heading-level", 2],
  ],
}
